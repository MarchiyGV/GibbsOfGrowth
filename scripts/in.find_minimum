# Find minimum energy fcc configuration
# Mark Tschopp, 2010

# Works for bcc and fcc

# ---------- Initialize Simulation --------------------- 


clear 
units metal 
dimension 3 
boundary p p p 
atom_style atomic 
atom_modify map array

variable name index name
variable path index workspace/${name}
include ../${path}/input.txt

# ---------- Create Atoms --------------------- 
lattice 	fcc 4
region	box block 0 1 0 1 0 1 units lattice
create_box	2 box

lattice	fcc 4 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1  
create_atoms 1 box
replicate 1 1 1

shell cd ../${pot_path}
include ${potname}
shell cd ../scripts

# ---------- Run Minimization --------------------- 
fix 1 all box/relax iso 0.0 vmax 0.001
minimize 1e-25 1e-25 5000 10000 
unfix 1

variable natoms equal "count(all)" 
variable natoms1 equal ${natoms} 
variable teng equal pe
variable teng1 equal ${teng}
variable length equal "lx"
variable length1 equal ${length}
variable ecoh1 equal "v_teng1/v_natoms1"

print "Total energy (eV) = ${teng1};"
print "Number of atoms = ${natoms1};"
print "Lattice constant (Angstoms) = ${length1};"
print "Cohesive energy (eV) = ${ecoh1};"

# ---------- Initialize Simulation --------------------- 
clear 
units metal 
dimension 3 
boundary p p p 
atom_style atomic 
atom_modify map array

# ---------- Create Atoms --------------------- 
lattice 	bcc 4
region	box block 0 1 0 1 0 1 units lattice
create_box	2 box

lattice	bcc 4 orient x 1 0 0 orient y 0 1 0 orient z 0 0 1  
create_atoms 1 box
replicate 1 1 1

shell cd ../${pot_path}
include ${potname}
shell cd ../scripts

# ---------- Run Minimization --------------------- 
fix 1 all box/relax iso 0.0 vmax 0.001
minimize 1e-25 1e-25 5000 10000 
unfix 1

variable natoms2 equal ${natoms} 
variable teng2 equal ${teng}
variable length2 equal ${length}
variable ecoh2 equal "v_teng2/v_natoms2"

print "Total energy (eV) = ${teng2};"
print "Number of atoms = ${natoms2};"
print "Lattice constant (Angstoms) = ${length2};"
print "Cohesive energy (eV) = ${ecoh2};"

# -----------------
# What is the minimum energy configuration

# FCC
if "${ecoh1} < ${ecoh2}" then &
"variable ecoh equal ${ecoh1}" & 
"variable a0 equal ${length1}" &
"variable lat string fcc" & 
"variable latnum equal 1"

# BCC
if "${ecoh2} < ${ecoh1}" then &
"variable ecoh equal ${ecoh2}" & 
"variable a0 equal ${length2}" &
"variable lat string bcc" &
"variable latnum equal 2"

print "!ecoh ${ecoh}"
print "!a0 ${a0}"
print "!${lat}"

variable natoms delete
variable natoms1 delete
variable teng delete
variable teng1 delete
variable length delete
variable length1 delete
variable ecoh1 delete
variable natoms2 delete
variable teng2 delete
variable length2 delete
variable ecoh2 delete


variable dat_path index ${path}/dat
shell mkdir ../${dat_path}
write_dump all cfg ../${dat_path}/${element1}.cfg mass type xs ys zs modify element ${element1} ${element2}
print "dumpfile ${element1}.cfg"
print "lattice found"
